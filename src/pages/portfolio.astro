---
import Base from '../layouts/Base.astro';
import { getCollection } from 'astro:content';
const base: string = import.meta.env.BASE_URL || '/';
const projects = (await getCollection('posts', ({ data }) => !data.draft && (data.tags || []).includes('portfolio')))
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
---
<Base title="portfolio â€” Home Base">
  <h1>portfolio</h1>
  <section class="project-grid">
    {projects.map((p) => (
      <article class="project-card">
        {p.data.hero && (
          <a class="hero" href={`${base}posts/${p.slug}/`}>
            <img src={`${base}${String(p.data.hero).replace(/^\//,'')}`} alt={`${p.data.title} cover`} loading="lazy" decoding="async" />
          </a>
        )}
        <div class="project-body">
          <h2 class="project-title"><a href={`${base}posts/${p.slug}/`}>{p.data.title}</a></h2>
          {p.data.summary && <p class="project-summary">{p.data.summary}</p>}
          {(p.data.dateRange || p.data.hours || p.data.tech) && (
            <p class="project-meta">
              {p.data.dateRange && <span class="meta-chip">{p.data.dateRange}</span>}
              {p.data.hours && <span class="meta-chip">{p.data.hours}</span>}
              {p.data.tech && p.data.tech.length > 0 && (
                <span class="meta-chip">{p.data.tech.join(', ')}</span>
              )}
            </p>
          )}
          {p.data.tags && (
            <div class="project-tags" aria-label="Tags">
              {(p.data.tags || []).map((t) => (
                <a class="tag" href={`${base}tags/${t}/`}>{t}</a>
              ))}
            </div>
          )}
        </div>
      </article>
    ))}
  </section>
</Base>

<style>
  .project-grid { display: grid; gap: 1rem; grid-template-columns: 1fr; }
  @media (min-width: 48rem) { .project-grid { grid-template-columns: 1fr; } }

  .project-card { border: 1px solid var(--rule); border-radius: 12px; overflow: clip; background: var(--bg); box-shadow: 0 1px 0 color-mix(in srgb, var(--accent) 15%, transparent); transition: transform .18s ease, box-shadow .18s ease, background .18s ease; }
  .project-card:hover { transform: translateY(-1px); background: color-mix(in srgb, var(--accent) 8%, var(--bg)); }
  /* Reduce hero height by ~30%: 16:9 -> 160:63 */
  .project-card .hero { display: block; background: #fff; aspect-ratio: 160/63; overflow: hidden; border-top-left-radius: 12px; border-top-right-radius: 12px; }
  .project-card .hero img { width: 100%; height: 100%; display: block; object-fit: cover; object-position: center; }
  .project-body { padding: .75rem .9rem 1rem; }
  .project-title { margin: 0 0 .25rem; font-size: clamp(1.05rem, 3.8vw, 1.35rem); }
  .project-title a { text-decoration: none; color: inherit; border-bottom: 1px solid transparent; }
  .project-title a:hover { border-bottom-color: var(--rule); }
  .project-summary { margin: 0; color: var(--muted); }
  .project-meta { margin: .35rem 0 0; color: var(--muted); font-size: .85em; display: flex; flex-wrap: wrap; gap: .35rem; }
  .meta-chip { background: color-mix(in srgb, var(--accent) 10%, transparent); border-radius: 999px; padding: 2px 10px; }
  .project-tags { margin-top: .5rem; display: flex; gap: .35rem; flex-wrap: wrap; }
  .project-tags .tag { background: color-mix(in srgb, var(--accent) 12%, transparent); border-radius: 12px; padding: 2px 8px; font-size: .82em; text-decoration: none; color: color-mix(in srgb, var(--accent) 65%, var(--fg)); }
</style>
