---
import Base from '../../layouts/Base.astro';
import Pagination from '../../components/Pagination.astro';
import { getCollection } from 'astro:content';

const PAGE_SIZE = 5;

export async function getStaticPaths() {
  const PAGE_SIZE = 5;
  const posts = await getCollection('posts', ({ data }) => !data.draft);
  const total = Math.ceil(posts.length / PAGE_SIZE);
  return Array.from({ length: Math.max(0, total - 1) }, (_, i) => ({ params: { page: String(i + 2) } }));
}

const base: string = import.meta.env.BASE_URL || '/';
const pageNum = Number(Astro.params.page ?? '1');
const all = (await getCollection('posts', ({ data }) => !data.draft))
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
const start = (pageNum - 1) * PAGE_SIZE;
const posts = all.slice(start, start + PAGE_SIZE);
const page = { current: pageNum, last: Math.max(1, Math.ceil(all.length / PAGE_SIZE)) };
---
<Base title={`Page ${pageNum} â€” Home Base`}>
  <h1>posts</h1>
  <ul class="post-list enhanced" id="post-list">
    {posts.map((post) => {
      const tags = post.data.tags ?? [];
      const dateISO = post.data.date.toISOString().slice(0, 10);
      return (
        <li class="post-card" data-tags={tags.join(',')}>
          <div class="post-head">
            <a class="post-title" href={`${base}posts/${post.slug}/`}>{post.data.title}</a>
            <time class="post-date" datetime={dateISO}>{new Date(post.data.date).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })}</time>
          </div>
          <div class="post-tags" aria-label="Tags">
            {tags.map((t) => (
              <a class="tag" href={`${base}tags/${t}/`} data-filter={t}>{t}</a>
            ))}
          </div>
        </li>
      );
    })}
  </ul>
  <Pagination {page} {base} />
</Base>
